{
  "swagger": "2.0",
  "info": {
    "version": "0.1.0",
    "title": "Book Twitter API",
    "description": "API document for Book Twitter"
  },
  "host": "localhost:5000",
  "basePath": "/",
  "tags": [
    {
      "name": "Book",
      "description": "Book API Endpoints"
    },
    {
      "name": "User",
      "description": "User API Endpoints"
    }
  ],
  "schemes": [
    "http"
  ],
  "paths": {
    "/api/v1/book/all/fields": {
      "get": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to get available fields of book",
        "parameters": [],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/book/": {
      "get": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to search books",
        "parameters": [
          {
            "name": "author",
            "in": "query",
            "type": "string"
          },
          {
            "name": "keywords",
            "in": "query",
            "type": "string"
          },
          {
            "name": "labels",
            "in": "query",
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to insert a book into database",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "authors": {
                  "example": "any"
                },
                "coverImage": {
                  "example": "any"
                },
                "description": {
                  "example": "any"
                },
                "labels": {
                  "example": "any"
                },
                "title": {
                  "example": "any"
                },
                "book": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/book/{bookId}": {
      "get": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to get specific book by its id",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "delete": {
        "tags": [
          "Book"
        ],
        "description": "Endpoint to delete a book from database by its id",
        "parameters": [
          {
            "name": "bookId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/api/v1/user/{username}": {
      "get": {
        "tags": [
          "User"
        ],
        "description": "Endpoint to get user info by its username",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    }
  }
}